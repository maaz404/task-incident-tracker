version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./task-incident-tracker-backend
      dockerfile: Dockerfile
    container_name: task-tracker-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost
    volumes:
      - ./task-incident-tracker-backend:/app
      - /app/node_modules
    networks:
      - task-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/tasks"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React Service  
  frontend:
    build:
      context: ./task-incident-tracker-frontend
      dockerfile: Dockerfile
    container_name: task-tracker-frontend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_API_BASE_PATH=/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./task-incident-tracker-frontend:/app
      - /app/node_modules
      - /app/build
    networks:
      - task-tracker-network
    depends_on:
      backend:
        condition: service_healthy

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: task-tracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - task-tracker-network
    depends_on:
      - frontend
      - backend

networks:
  task-tracker-network:
    driver: bridge

volumes:
  task-tracker-data:
