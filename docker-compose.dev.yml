version: '3.8'

services:
  # Backend API Service (Development)
  backend:
    build:
      context: ./task-incident-tracker-backend
      dockerfile: Dockerfile
      target: development
    container_name: task-tracker-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://frontend:3001
    volumes:
      - ./task-incident-tracker-backend:/app
      - /app/node_modules
    networks:
      - task-tracker-network
    command: npm run dev

  # Frontend React Service (Development)
  frontend:
    build:
      context: ./task-incident-tracker-frontend
      dockerfile: Dockerfile
      target: development
    container_name: task-tracker-frontend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_API_BASE_PATH=/api
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=false
    volumes:
      - ./task-incident-tracker-frontend:/app
      - /app/node_modules
    networks:
      - task-tracker-network
    command: npm start
    depends_on:
      - backend

  # MongoDB for local development (optional)
  mongodb:
    image: mongo:6.0
    container_name: task-tracker-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=task-incident-tracker
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - task-tracker-network

networks:
  task-tracker-network:
    driver: bridge

volumes:
  mongodb-data:
